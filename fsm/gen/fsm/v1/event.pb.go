// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: fsm/v1/event.proto

package fsmv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	EventType_EVENT_TYPE_START       EventType = 1
	EventType_EVENT_TYPE_ERROR       EventType = 2
	EventType_EVENT_TYPE_COMPLETE    EventType = 3
	EventType_EVENT_TYPE_FINISH      EventType = 4
	EventType_EVENT_TYPE_CANCEL      EventType = 5
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_START",
		2: "EVENT_TYPE_ERROR",
		3: "EVENT_TYPE_COMPLETE",
		4: "EVENT_TYPE_FINISH",
		5: "EVENT_TYPE_CANCEL",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_START":       1,
		"EVENT_TYPE_ERROR":       2,
		"EVENT_TYPE_COMPLETE":    3,
		"EVENT_TYPE_FINISH":      4,
		"EVENT_TYPE_CANCEL":      5,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_fsm_v1_event_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_fsm_v1_event_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_fsm_v1_event_proto_rawDescGZIP(), []int{0}
}

type ActiveEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartEvent    []byte                 `protobuf:"bytes,1,opt,name=start_event,json=startEvent,proto3" json:"start_event,omitempty"`
	StartVersion  []byte                 `protobuf:"bytes,2,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	EndEvent      []byte                 `protobuf:"bytes,3,opt,name=end_event,json=endEvent,proto3" json:"end_event,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	ResourceId    string                 `protobuf:"bytes,5,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Resource      []byte                 `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	Transitions   []string               `protobuf:"bytes,7,rep,name=transitions,proto3" json:"transitions,omitempty"`
	Options       *EventOptions          `protobuf:"bytes,8,opt,name=options,proto3" json:"options,omitempty"`
	TraceContext  map[string]string      `protobuf:"bytes,9,rep,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActiveEvent) Reset() {
	*x = ActiveEvent{}
	mi := &file_fsm_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActiveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveEvent) ProtoMessage() {}

func (x *ActiveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_fsm_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveEvent.ProtoReflect.Descriptor instead.
func (*ActiveEvent) Descriptor() ([]byte, []int) {
	return file_fsm_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *ActiveEvent) GetStartEvent() []byte {
	if x != nil {
		return x.StartEvent
	}
	return nil
}

func (x *ActiveEvent) GetStartVersion() []byte {
	if x != nil {
		return x.StartVersion
	}
	return nil
}

func (x *ActiveEvent) GetEndEvent() []byte {
	if x != nil {
		return x.EndEvent
	}
	return nil
}

func (x *ActiveEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ActiveEvent) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ActiveEvent) GetResource() []byte {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ActiveEvent) GetTransitions() []string {
	if x != nil {
		return x.Transitions
	}
	return nil
}

func (x *ActiveEvent) GetOptions() *EventOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ActiveEvent) GetTraceContext() map[string]string {
	if x != nil {
		return x.TraceContext
	}
	return nil
}

type EventOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DelayUntil    int64                  `protobuf:"varint,1,opt,name=delay_until,json=delayUntil,proto3" json:"delay_until,omitempty"`
	RunAfter      []byte                 `protobuf:"bytes,2,opt,name=run_after,json=runAfter,proto3" json:"run_after,omitempty"`
	Queue         string                 `protobuf:"bytes,3,opt,name=queue,proto3" json:"queue,omitempty"`
	Parent        []byte                 `protobuf:"bytes,4,opt,name=parent,proto3" json:"parent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventOptions) Reset() {
	*x = EventOptions{}
	mi := &file_fsm_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventOptions) ProtoMessage() {}

func (x *EventOptions) ProtoReflect() protoreflect.Message {
	mi := &file_fsm_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventOptions.ProtoReflect.Descriptor instead.
func (*EventOptions) Descriptor() ([]byte, []int) {
	return file_fsm_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventOptions) GetDelayUntil() int64 {
	if x != nil {
		return x.DelayUntil
	}
	return 0
}

func (x *EventOptions) GetRunAfter() []byte {
	if x != nil {
		return x.RunAfter
	}
	return nil
}

func (x *EventOptions) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *EventOptions) GetParent() []byte {
	if x != nil {
		return x.Parent
	}
	return nil
}

type StateEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          EventType              `protobuf:"varint,1,opt,name=type,proto3,enum=fsm.v1.EventType" json:"type,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ResourceType  string                 `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	State         string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Error         string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	Response      []byte                 `protobuf:"bytes,7,opt,name=response,proto3" json:"response,omitempty"`
	RetryCount    uint64                 `protobuf:"varint,8,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	RunVersion    []byte                 `protobuf:"bytes,9,opt,name=run_version,json=runVersion,proto3" json:"run_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StateEvent) Reset() {
	*x = StateEvent{}
	mi := &file_fsm_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateEvent) ProtoMessage() {}

func (x *StateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_fsm_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateEvent.ProtoReflect.Descriptor instead.
func (*StateEvent) Descriptor() ([]byte, []int) {
	return file_fsm_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *StateEvent) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *StateEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StateEvent) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *StateEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *StateEvent) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StateEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *StateEvent) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *StateEvent) GetRetryCount() uint64 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *StateEvent) GetRunVersion() []byte {
	if x != nil {
		return x.RunVersion
	}
	return nil
}

type HistoryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveEvent   *ActiveEvent           `protobuf:"bytes,1,opt,name=active_event,json=activeEvent,proto3" json:"active_event,omitempty"`
	LastEvent     *StateEvent            `protobuf:"bytes,2,opt,name=last_event,json=lastEvent,proto3" json:"last_event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryEvent) Reset() {
	*x = HistoryEvent{}
	mi := &file_fsm_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryEvent) ProtoMessage() {}

func (x *HistoryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_fsm_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryEvent.ProtoReflect.Descriptor instead.
func (*HistoryEvent) Descriptor() ([]byte, []int) {
	return file_fsm_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *HistoryEvent) GetActiveEvent() *ActiveEvent {
	if x != nil {
		return x.ActiveEvent
	}
	return nil
}

func (x *HistoryEvent) GetLastEvent() *StateEvent {
	if x != nil {
		return x.LastEvent
	}
	return nil
}

var File_fsm_v1_event_proto protoreflect.FileDescriptor

var file_fsm_v1_event_proto_rawDesc = []byte{
	0x0a, 0x12, 0x66, 0x73, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x66, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x22, 0xa4, 0x03, 0x0a,
	0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x73, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x66, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x1a, 0x3f, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x7a, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x75, 0x6e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22,
	0x8a, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x66,
	0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x75, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x72, 0x75, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x0c,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x73, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x73, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0x9a, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x10, 0x05, 0x42, 0x96, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x73, 0x6d,
	0x2e, 0x76, 0x31, 0x42, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x66, 0x6c, 0x79, 0x2f, 0x6e, 0x6f, 0x6d, 0x61, 0x64, 0x2d, 0x66, 0x69, 0x72,
	0x65, 0x63, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x66, 0x73, 0x6d, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x66, 0x73, 0x6d, 0x2f, 0x76, 0x31,
	0x3b, 0x66, 0x73, 0x6d, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x46, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x46,
	0x73, 0x6d, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x46, 0x73, 0x6d, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x12, 0x46, 0x73, 0x6d, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x07, 0x46, 0x73, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fsm_v1_event_proto_rawDescOnce sync.Once
	file_fsm_v1_event_proto_rawDescData = file_fsm_v1_event_proto_rawDesc
)

func file_fsm_v1_event_proto_rawDescGZIP() []byte {
	file_fsm_v1_event_proto_rawDescOnce.Do(func() {
		file_fsm_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_fsm_v1_event_proto_rawDescData)
	})
	return file_fsm_v1_event_proto_rawDescData
}

var file_fsm_v1_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fsm_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_fsm_v1_event_proto_goTypes = []any{
	(EventType)(0),       // 0: fsm.v1.EventType
	(*ActiveEvent)(nil),  // 1: fsm.v1.ActiveEvent
	(*EventOptions)(nil), // 2: fsm.v1.EventOptions
	(*StateEvent)(nil),   // 3: fsm.v1.StateEvent
	(*HistoryEvent)(nil), // 4: fsm.v1.HistoryEvent
	nil,                  // 5: fsm.v1.ActiveEvent.TraceContextEntry
}
var file_fsm_v1_event_proto_depIdxs = []int32{
	2, // 0: fsm.v1.ActiveEvent.options:type_name -> fsm.v1.EventOptions
	5, // 1: fsm.v1.ActiveEvent.trace_context:type_name -> fsm.v1.ActiveEvent.TraceContextEntry
	0, // 2: fsm.v1.StateEvent.type:type_name -> fsm.v1.EventType
	1, // 3: fsm.v1.HistoryEvent.active_event:type_name -> fsm.v1.ActiveEvent
	3, // 4: fsm.v1.HistoryEvent.last_event:type_name -> fsm.v1.StateEvent
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_fsm_v1_event_proto_init() }
func file_fsm_v1_event_proto_init() {
	if File_fsm_v1_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fsm_v1_event_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fsm_v1_event_proto_goTypes,
		DependencyIndexes: file_fsm_v1_event_proto_depIdxs,
		EnumInfos:         file_fsm_v1_event_proto_enumTypes,
		MessageInfos:      file_fsm_v1_event_proto_msgTypes,
	}.Build()
	File_fsm_v1_event_proto = out.File
	file_fsm_v1_event_proto_rawDesc = nil
	file_fsm_v1_event_proto_goTypes = nil
	file_fsm_v1_event_proto_depIdxs = nil
}
